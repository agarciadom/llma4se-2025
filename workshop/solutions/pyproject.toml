[project]
name = "llma4se-2025-solutions"
version = "0.0.1"
description = "Solutions for the LLMA4SE 2025 LangGraph workshop."
authors = [
    { name = "Antonio Garcia-Dominguez", email = "a.garcia-dominguez@york.ac.uk" },
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "langchain-mcp-adapters>=0.1.9",
    "langchain-tavily>=0.2.11",
    "langchain[openai]>=0.3.27",
    "langgraph>=0.2.6",
    "mcp-server-fetch>=2025.4.7",
    "python-dotenv>=1.0.1",
]

[project.optional-dependencies]
dev = ["mypy>=1.11.1", "ruff>=0.6.1", "debugpy>=1.8.16" ]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["travel_planner", "prebuilt_searcher"]

[tool.setuptools.package-dir]
"travel_planner" = "src/travel_planner"
"prebuilt_searcher" = "src/prebuilt_searcher"

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
dev = [
    "anyio>=4.7.0",
    "langgraph-cli[inmem]>=0.2.8",
    "mypy>=1.13.0",
    "pytest>=8.3.5",
    "ruff>=0.8.2",
]
